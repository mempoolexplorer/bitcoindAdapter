plugins {
  id 'org.springframework.boot' version '2.2.4.RELEASE'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
  id 'com.palantir.docker' version '0.22.1'
  id 'java'
  id 'jacoco'
  id 'checkstyle'
  id "io.freefair.lombok" version "5.0.0-rc4"
 }

group = 'com.mempoolexplorer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
  set('springCloudVersion', "Hoxton.SR1")
}

configurations.all {
  resolutionStrategy.eachDependency { details ->
    if (details.requested.group == 'org.apache.logging.log4j') {
      details.useVersion '2.17.0'
      details.because 'zero-day-exploits suck'
    }
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.zeromq:jeromq:0.5.2'
	
  	testImplementation('org.springframework.boot:spring-boot-starter-test') {
    	exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  	}
  	
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
  	testImplementation 'org.springframework.kafka:spring-kafka-test'
  	
  	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	
		
	//Other dependencies
	implementation 'com.google.guava:guava:28.1-jre'
	implementation 'org.apache.commons:commons-lang3:3.9'
	implementation 'org.apache.commons:commons-collections4:4.1'
	
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

test {
  useJUnitPlatform()
}

//Fails with less than 20% covering tests
jacocoTestCoverageVerification	{
	violationRules	{
		rule	{
			limit	{
				minimum	=	0.2
			}
		}
	}
}

//plugin checkstyle root file
checkstyle {
        configFile = rootProject.file('./checkstyle.xml')
    }

bootJar {
    baseName = 'bitcoindAdapter'
    version =  '0.0.1-SNAPSHOT'
}
// Recommended buy complicated
//task unpack(type: Copy) {
//    dependsOn bootJar
//    from(zipTree(tasks.bootJar.outputs.files.singleFile))
//    into("build/dependency")
//}

//docker {
//    name "localhost:5000/bitcoind_adapter:latest"
//    copySpec.from(tasks.unpack.outputs).into("dependency")
//    buildArgs(['DEPENDENCY': "dependency"])
//}

//Easy way
docker {
    name "localhost:5000/bitcoind_adapter:latest"
    copySpec.from("build/libs/bitcoindAdapter-0.0.1-SNAPSHOT.jar").into("app")
    buildArgs(['DEPENDENCY': "app"])
}
